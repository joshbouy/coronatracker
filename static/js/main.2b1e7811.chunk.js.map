{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","components/Header/Header.jsx","App.js","index.js","components/Header/Header.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Footer/Footer.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spaceing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","footer","href","Header","header","dashed","App","state","fetchedData","setState","this","src","coronaImage","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NCkEpJC,EA5DD,SAAC,GAAwD,IAAD,IAAtDC,KAAOC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAEjD,OAAIH,EAMA,yBAAKI,UAAaC,IAAOC,WACrB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,SAAY,EAAGC,QAAQ,UACvC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WAC1E,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAO,gBAAgBC,cAAY,GAA/C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACCC,MAAS,EACTC,IAAKxB,EAAUyB,MACfC,SAAU,EACVC,UAAU,OAGf,kBAACR,EAAA,EAAD,CAAYC,MAAO,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACzD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGP,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YAC1E,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAO,gBAAgBC,cAAY,GAA/C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MACpB,kBAAC,IAAD,CACKC,MAAS,EACTC,IAAKvB,EAAUwB,MACfC,SAAU,EACVC,UAAU,OAEf,kBAACR,EAAA,EAAD,CAAYC,MAAO,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACzD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGP,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SAC1E,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAO,gBAAgBC,cAAY,GAA/C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MACpB,kBAAC,IAAD,CACKC,MAAS,EACTC,IAAKtB,EAAOuB,MACZC,SAAU,EACVC,UAAU,OAGf,kBAACR,EAAA,EAAD,CAAYC,MAAO,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACzD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,oCAhDJ,c,yBCRTQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,6BAAAC,EAAA,6DACjBC,EAAgBJ,EAEjBE,IACCE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJnB,kBAQgDG,IAAMC,IAAIF,GAR1D,2BAQVnC,KAAOC,EARG,EAQHA,UAAWC,EARR,EAQQA,UAAWC,EARnB,EAQmBA,OAAQC,EAR3B,EAQ2BA,WAEtCkC,EAAe,CACjBrC,YACAC,YACAC,SACAC,cAda,kBAgBVkC,GAhBU,kCAoBjBC,QAAQC,IAAR,MApBiB,0DAAH,sDAwBTC,EAAc,uCAAG,gCAAAP,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,WAFD,uBAEd/B,EAFc,EAEdA,KAEFsC,EAAetC,EAAK0C,KAAI,SAACC,GAAD,MAAc,CACxC1C,UAAW0C,EAAU1C,UAAU2C,MAC/BzC,OAAQwC,EAAUxC,OAAOyC,MACzBC,KAAMF,EAAUG,eAPE,kBAUfR,GAVe,gCAatBC,QAAQC,IAAR,MAbsB,yDAAH,qDAiBdO,EAAc,uCAAG,8BAAAb,EAAA,+EAEWE,IAAMC,IAAN,UAAaN,EAAb,eAFX,uBAETiB,EAFS,EAEfhD,KAAMgD,UAFS,kBAGfA,EAAUN,KAAI,SAACT,GAAD,OAAYA,EAAQgB,SAHnB,gCAKtBV,QAAQC,IAAR,MALsB,yDAAH,qD,yBC2BZU,EAjED,SAAC,GAAmD,IAAD,IAAjDlD,KAAMC,EAA2C,EAA3CA,UAAUC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,OAAS8B,EAAa,EAAbA,QAAa,EAC3BkB,mBAAS,IADkB,mBACtDR,EADsD,KAC3CS,EAD2C,KAG7DC,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMX,IADN,6EAAH,qDAIda,KACF,IAEF,IAAMC,EACFZ,EAAUa,OAEV,kBAAC,OAAD,CACIxD,KAAQ,CACJyD,OAAQd,EAAUD,KAAI,qBAAEG,QACxBa,SAAU,CACN,CACI1D,KAAM2C,EAAUD,KAAI,qBAAEzC,aACtB0D,MAAO,WACPC,YAAa,UACbC,MAAM,GAEV,CACI7D,KAAM2C,EAAUD,KAAI,qBAAEvC,UACtBwD,MAAO,SACPG,gBAAiB,oBACjBF,YAAa,MACbC,MAAM,OAGhB,KAGJE,EACF9D,EAEA,kBAAC,MAAD,CACID,KAAM,CACFyD,OAAQ,CAAC,WAAW,YAAY,UAChCC,SAAU,CAAC,CACPC,MAAO,SACPG,gBAAiB,CACb,oBACA,oBACA,qBAEJ9D,KAAK,CAACC,EAAUyB,MAAMxB,EAAUwB,MAAMvB,EAAOuB,UAGrDsC,QAAU,CACRC,OAAQ,CAACC,SAAS,GAClBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAqBnC,OAEjD,KAGV,OACI,yBAAK5B,UAAWC,IAAOC,WAClB0B,EAAU8B,EAAWR,I,mCCpCnBc,EAxBO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EAEGnB,mBAAS,IAFZ,mBAEtCoB,EAFsC,KAEpBC,EAFoB,KAc7C,OAVAnB,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbsC,EADa,SACazB,IADb,6EAAH,qDAIdO,KACF,CAACkB,IAKC,kBAACC,EAAA,EAAD,CAAapE,UAAaC,IAAOoE,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAKR,EAAoBQ,EAAEC,OAAOrD,SACtE,4BAAQA,MAAM,IAAd,UACC6C,EAAiB7B,KAAI,SAACT,EAAS+C,GAAV,OAAc,4BAAQC,IAAKD,EAAGtD,MAAOO,GAAUA,S,iBCdtEiD,EARA,WACX,OACI,yBAAK7E,UAAaC,IAAO6E,QAAzB,aACU,uBAAGC,KAAO,4DAAV,gB,iBCeHC,EAjBA,WACX,OACI,6BACA,wBAAIhF,UAAWC,IAAOgF,QAAtB,0DACA,2CACA,wBAAIjF,UAAWC,IAAOiF,QAClB,wDAGA,+D,kCCgDGC,E,4MA7CXC,MAAQ,CACJzF,KAAM,GACNiC,QAAS,I,EASbqC,oB,uCAAsB,WAAOrC,GAAP,eAAAC,EAAA,sEAMQF,EAAUC,GANlB,OAMZyD,EANY,OAYlB,EAAKC,SAAS,CAAC3F,KAAM0F,EAAazD,QAASA,IAZzB,2C,wPALQD,I,OAApB0D,E,OAENE,KAAKD,SAAS,CAAC3F,KAAK0F,I,qIAoBd,IAAD,EACmBE,KAAKH,MAAtBzF,EADF,EACEA,KAAMiC,EADR,EACQA,QAEb,OACA,yBAAK5B,UAAaC,IAAOC,WACrB,yBAAKsF,IAAKC,IAAazF,UAAWC,IAAOyF,QACzC,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAO/F,KAAMA,IACb,kBAAC,EAAD,CAAesE,oBAAqBsB,KAAKtB,sBACzC,kBAAC,EAAD,CAAOtE,KAAMA,EAAMiC,QAAUA,IAC7B,kBAAC,EAAD,W,GAvCM+D,IAAMC,WCVxBC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,U,mBCJlDxG,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,mBCA3DD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCAhCD,EAAOC,QAAU,CAAC,OAAS,yB,mBCD3BD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.2b1e7811.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid, StylesProvider} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\n    \n    if(!confirmed){\n        return 'Loading...';\n    }\n    \n\n    return (\n        <div className = {styles.container}>\n            <Grid container spaceing = {3} justify=\"center\">\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n               <CardContent>\n                   <Typography color =\"textSecondary\" gutterBottom>Infected</Typography>\n                   <Typography variant=\"h5\">\n                       <CountUp\n                        start = {0}\n                        end={confirmed.value}\n                        duration={2}\n                        separator=\",\"\n                       />\n                       </Typography>\n                   <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                   <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                </CardContent> \n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n               <CardContent>\n                   <Typography color =\"textSecondary\" gutterBottom>Recovered</Typography>\n                   <Typography variant=\"h5\">\n                   <CountUp\n                        start = {0}\n                        end={recovered.value}\n                        duration={2}\n                        separator=\",\"\n                       /></Typography>\n                   <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                   <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                </CardContent> \n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n               <CardContent>\n                   <Typography color =\"textSecondary\" gutterBottom>Deaths</Typography>\n                   <Typography variant=\"h5\">\n                   <CountUp\n                        start = {0}\n                        end={deaths.value}\n                        duration={2}\n                        separator=\",\"\n                       />\n                   </Typography>\n                   <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                   <Typography variant=\"body2\">Number of deaths by COVID-19</Typography>\n                </CardContent> \n            </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if(country){\n        changeableUrl = `${url}/countries/${country}`\n    }\n\n    try{\n        const {data :{confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\n\n        const modifiedData = {\n            confirmed,\n            recovered,\n            deaths,\n            lastUpdate,\n        }\n        return modifiedData;\n\n    }\n    catch (error){\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async ()=> {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData)=>({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n\n        return modifiedData;\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const {data:{countries}} = await axios.get(`${url}/countries`);\n        return countries.map((country)=> country.name);\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useState , useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data:{confirmed,recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(()=>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }  \n\n        fetchAPI();\n    },[]);\n\n    const lineChart = (\n        dailyData.length\n        ?(\n        <Line \n            data = {{\n                labels: dailyData.map(({date}) => date),\n                datasets: [\n                    {\n                        data: dailyData.map(({confirmed})=> confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true,\n                    }, \n                    {\n                        data: dailyData.map(({deaths})=> deaths),\n                        label: 'Deaths',\n                        backgroundColor: 'rgba(255,0,0,0.5)',\n                        borderColor: 'red',\n                        fill: true,\n                    }],\n            }}\n        />) : null\n    );\n\n    const barChart = (\n        confirmed\n        ?(\n        <Bar \n            data={{\n                labels: ['Infected','Recovered','Deaths'],\n                datasets: [{\n                    label: 'People',\n                    backgroundColor: [\n                        'rgba(0,0,255,0.5)',\n                        'rgba(0,255,0,0.5)',\n                        'rgba(255,0,0,0.5)',\n                    ],\n                    data:[confirmed.value,recovered.value,deaths.value],\n                }]\n            }}\n            options ={{\n              legend: {display: false},\n              title: { display: true, text:`Current state in ${country}`}  \n            }}\n        />) : null\n    );\n    \n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState,useEffect} from 'react';\nimport { NativeSelect, FormControl} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport {fetchCountries} from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(()=>{\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    },[setFetchedCountries]);\n\n\n\n    return (\n        <FormControl className = {styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i)=><option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker; ","import React from 'react';\n\nimport styles from './Footer.module.css';\nconst Footer = () =>{\n    return(\n        <div className = {styles.footer}> \n        Credit to <a href = \"https://www.youtube.com/channel/UCmXmlB4-HJytD7wek0Uo97A\">JS_Mastery</a>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\n\nimport styles from './Header.module.css'\n\nconst Header = ()=>{\n    return (\n        <div>\n        <h2 className={styles.header}>Welcome to a daily, responsive Corona Tracker web app.</h2>\n        <h4>Try it out!</h4>\n        <ul className={styles.dashed}>\n            <li>\n                You can change the graph\n            </li>\n            <li>\n                You can change the countries\n            </li>\n        </ul>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\n\n/*import Cards from './components/Cards';\nimport Chart from './components/Chart';\nimport CountryPicker from './components/CountryPicker';\n*/ \n\n/* Not this ^, But this v */\n\nimport {Cards, Chart, CountryPicker, Footer, Header} from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n\n        this.setState({data:fetchedData});\n    }\n\n    handleCountryChange = async (country) => {\n        // fetch the data\n        // set the state\n\n        \n\n        const fetchedData = await fetchData(country);\n\n        //console.log(country);\n\n        //console.log(fetchedData);\n\n        this.setState({data: fetchedData, country: country});\n        \n\n    }\n\n    render() {\n        const {data, country} = this.state;\n\n        return (\n        <div className = {styles.container}>\n            <img src={coronaImage} className={styles.image}></img>\n            <Header />\n            <Cards data={data}/>\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\n            <Chart data={data} country ={country}/>\n            <Footer />\n        </div>\n        \n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App /> , document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"dashed\":\"Header_dashed__GBPas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}